name: Maven Central Publishing

on:
  push:
    branches: ["production"]

permissions:
  contents: read

jobs:
  build:
    uses: ./.github/workflows/unit-test.yml
  deploy:
    needs: build
    strategy:
      matrix:
        include:
          - target: publishAndroidReleasePublicationToSonatypeRepository
            os: ubuntu-latest
          - target: publishIosArm64PublicationToSonatypeRepository
            os: macos-latest
          - target: publishIosSimulatorArm64PublicationToSonatypeRepository
            os: macos-latest
          - target: publishIosX64PublicationToSonatypeRepository
            os: macos-latest
          - target: publishJvmPublicationToSonatypeRepository
            os: ubuntu-latest
          - target: publishJsPublicationToSonatypeRepository
            os: ubuntu-latest
          - target: publishWasmJsPublicationToSonatypeRepository
            os: ubuntu-latest
          - target: publishKotlinMultiplatformPublicationToSonatypeRepository
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1
    - uses: actions/cache@v3
      with:
        path: |
          ~/.konan
        key: ${{ runner.os }}-${{ hashFiles('**/.lock') }}
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
        passphrase: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Grant Permission to Execute Gradle
      run: chmod +x gradlew
    - name: Publish to MavenCentral
      env:
        GRADLE_PUBLISH_COMMAND: ${{ matrix.target }}
        OSSRH_GPG_SECRET_KEY_PASSWORD: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        OSSRH_GPG_SECRET_KEY_ID: ${{ secrets.OSSRH_GPG_SECRET_KEY_ID }}
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      run: ./gradlew $GRADLE_PUBLISH_COMMAND -Psigning.gnupg.passphrase=$OSSRH_GPG_SECRET_KEY_PASSWORD -Psigning.gnupg.keyName=$OSSRH_GPG_SECRET_KEY_ID -PsonatypeUsername=$OSSRH_USERNAME -PsonatypePassword=$OSSRH_PASSWORD
#      run: ./gradlew $GRADLE_PUBLISH_COMMAND closeSonatypeStagingRepository releaseSonatypeStagingRepository -Psigning.gnupg.passphrase=$OSSRH_GPG_SECRET_KEY_PASSWORD -Psigning.gnupg.keyName=$OSSRH_GPG_SECRET_KEY_ID -PsonatypeUsername=$OSSRH_USERNAME -PsonatypePassword=$OSSRH_PASSWORD